import numpy as np
from sklearn.cluster import MeanShift, estimate_bandwidth
from sklearn.datasets.samples_generator import make_blobs
import matplotlib.pyplot as plt
from itertools import cycle
from PIL import Image
import matplotlib as mp
import pandas as pd
from matplotlib import colors as cp
import scipy
from scipy.cluster.vq import whiten
from mpl_toolkits.mplot3d import Axes3D

headers = ["lat","long"]
df=pd.read_csv(r"C:\Users\Tripti Sharma\Desktop\IndianRain\rain 4000 locations 244 days\indialocations_high_res.csv",names=headers)
##print(dataset)
x=df.iloc[:,0]
y=df.iloc[:,1]

x1=np.array(x)
y1=np.array(y)

print (np.shape(x1))




data = pd.read_csv(r'C:\Users\Tripti Sharma\Desktop\IndianRain\rain 4000 locations 244 days\rain 2001-2010 locs 4000.csv')
#print(data)
numpy_matrix = data.as_matrix()
#X = np.asanyarray(data, dtype=float, order='C')
#ts=scipy.cluster.vq.whiten(data)
    

clusters=MeanShift(bandwidth=1850, cluster_all=True, n_jobs=1)
clusters.fit(numpy_matrix)
labels = clusters.labels_
cluster_centers = clusters.cluster_centers_

n_clusters_ = labels.max()
print(n_clusters_)
print(np.shape(cluster_centers))
print(cluster_centers[0])


#c0=cluster_centers[0]
#print(c)

#for i in range (n_clusters_):
#colors = cycle('bgrcmykbgrcmykbgrcmykbgrcmyk')
#print (np.shape(x1),np.shape(y1),np.shape(cluster_centers[]))
#for k, col in zip(range(n_clusters_), colors):
    
   # cluster_center = cluster_centers[k]
#threedee = plt.figure().gca(projection='3d')

f1=plt.scatter(y1,x1,s=1,c=cluster_centers[0])
#plt.colorbar(mappable=f1)
plt.suptitle('rainfall pattern ', fontsize=12, fontweight='bold')
plt.xlabel('latitude')
plt.ylabel('longitude')
#plt.yticks(np.arange(0, 5, 1.0))
#plt.xscale= 0.5
#plt.yscale= 0.5


#plt.colorbar(mappable=f1)
f1=plt.scatter(y1,x1,s=1,c=cluster_centers[1])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f2=plt.scatter(y1,x1,s=1,c=cluster_centers[2])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f3=plt.scatter(y1,x1,s=1,c=cluster_centers[3])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()


#plt.colorbar(mappable=f4)
f4=plt.scatter(y1,x1,s=1,c=cluster_centers[4])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f5=plt.scatter(y1,x1,s=1,c=cluster_centers[5])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f6=plt.scatter(y1,x1,s=1,c=cluster_centers[6])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()




f7=plt.scatter(y1,x1,s=1,c=cluster_centers[7])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f8=plt.scatter(y1,x1,s=1,c=cluster_centers[8])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f9=plt.scatter(y1,x1,s=1,c=cluster_centers[9])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()




f10=plt.scatter(y1,x1,s=1,c=cluster_centers[10])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f11=plt.scatter(y1,x1,s=1,c=cluster_centers[11])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()


f12=plt.scatter(y1,x1,s=1,c=cluster_centers[12])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f13=plt.scatter(y1,x1,s=1,c=cluster_centers[13])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()

f14=plt.scatter(y1,x1,s=1,c=cluster_centers[14])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()




f15=plt.scatter(y1,x1,s=1,c=cluster_centers[15])
plt.colorbar(mappable=f1)
plt.xlabel('latitude')
plt.ylabel('longitude')
plt.show()
